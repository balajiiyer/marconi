[metadata]
name = marconi

# Icehouse-2 development
version = 2014.1.b2

summary = OpenStack Queuing and Notification Service
description-file =
    README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://www.openstack.org/
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 2.6

[files]
packages =
    marconi

[entry_points]
console_scripts =
    marconi-server = marconi.cmd.server:run

marconi.queues.data.storage =
    sqlite = marconi.queues.storage.sqlite.driver:DataDriver
    mongodb = marconi.queues.storage.mongodb.driver:DataDriver
    faulty = marconi.tests.faulty_storage:DataDriver

marconi.queues.control.storage =
    sqlite = marconi.queues.storage.sqlite.driver:ControlDriver
    mongodb = marconi.queues.storage.mongodb.driver:ControlDriver
    faulty = marconi.tests.faulty_storage:ControlDriver

marconi.queues.public.transport =
    wsgi = marconi.queues.transport.wsgi.public.driver:Driver
<<<<<<< HEAD
    pecan = marconi.queues.transport.pecan.public.driver:Driver

marconi.queues.admin.transport =
    wsgi = marconi.queues.transport.wsgi.admin.driver:Driver
    pecan = marconi.queues.transport.pecan.admin.driver:Driver
=======
    pecan = marconi.queues.transport.pecan.driver:DriverBase

marconi.queues.admin.transport =
    wsgi = marconi.queues.transport.wsgi.admin.driver:Driver
    pecan = marconi.queues.transport.pecan.driver:DriverBase
>>>>>>> 2c67146e126c14bf81f4e50f948d1b30b514ceaf

marconi.openstack.common.cache.backends =
    memory = marconi.openstack.common.cache._backends.memory:MemoryBackend

oslo.config.opts =
    marconi.bootstrap = marconi.queues.bootstrap._config_options
    marconi.storage.base = marconi.queues.storage.base._config_options
    marconi.storage.pipeline = marconi.queues.storage.pipeline._config_options
    marconi.storage.sharding = marconi.queues.storage.sharding._config_options
    marconi.storage.mongodb = marconi.queues.storage.mongodb.options._config_options
    marconi.storage.sqlite = marconi.queues.storage.sqlite.options._config_options
    marconi.transport.wsgi = marconi.queues.transport.wsgi.driver._config_options
    marconi.transport.base = marconi.queues.transport.base._config_options
    marconi.transport.validation = marconi.queues.transport.validation._config_options

[nosetests]
where=tests
verbosity=2

with-doctest = true

cover-package = marconi
cover-html = true
cover-erase = true
cover-inclusive = true

; Disabled: Causes a bug in testtools to manifest.
; Trigger: self.assertX(condition), where condition == False.
;
; In "testtools/testresult/real.py" the traceback is set to
; None in _details_to_exc_info(), but the inspect_traceback()
; method in nose/inspector.py requires a traceback-like object.
;
; detailed-errors = 1

